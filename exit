[1mdiff --git a/src/pages/Cores/index.tsx b/src/pages/Cores/index.tsx[m
[1mindex 9fb1b9e..aed48a0 100644[m
[1m--- a/src/pages/Cores/index.tsx[m
[1m+++ b/src/pages/Cores/index.tsx[m
[36m@@ -1,47 +1,24 @@[m
[31m-import {useMemo} from 'react';[m
[31m-import {useSelector} from 'react-redux';[m
[31m-import orderBy from 'lodash/orderBy';[m
[32m+[m[32mimport {Navigate, Route, Routes} from 'react-router-dom';[m
 [m
[31m-import Button from 'components/Button';[m
[31m-import EmptyText from 'components/EmptyText';[m
[31m-import SectionHeading from 'components/SectionHeading';[m
[31m-import {useToggle} from 'hooks';[m
[31m-import CoreModal from 'modals/CoreModal';[m
[31m-import {getCores} from 'selectors/state';[m
 import {SFC} from 'types';[m
[31m-import CoreCard from './CoreCard';[m
[32m+[m[32mimport Home from './Home';[m
[32m+[m[32mimport LearnMore from './LearnMore';[m
[32m+[m[32mimport Layout from './layout';[m
 import * as S from './Styles';[m
 [m
 const Cores: SFC = ({className}) => {[m
[31m-  const [coreModalIsOpen, toggleCoreModal] = useToggle(false);[m
[31m-  const cores = useSelector(getCores);[m
[31m-[m
[31m-  const coresList = useMemo(() => {[m
[31m-    return orderBy(Object.values(cores), ['ticker']);[m
[31m-  }, [cores]);[m
[31m-[m
[31m-  const renderButton = () => {[m
[31m-    return <Button onClick={toggleCoreModal} text="Add Currency" />;[m
[31m-  };[m
[31m-[m
[31m-  const renderContent = () => {[m
[31m-    if (!!coresList.length) return renderCores();[m
[31m-    return <EmptyText>No cores to display.</EmptyText>;[m
[31m-  };[m
[31m-[m
[31m-  const renderCores = () => {[m
[31m-    const coreCards = coresList.map((core) => <CoreCard core={core} key={core.id} />);[m
[31m-    return <S.CardsContainer>{coreCards}</S.CardsContainer>;[m
[31m-  };[m
[31m-[m
   return ([m
[31m-    <>[m
[31m-      <S.Container className={className}>[m
[31m-        <SectionHeading heading="Currencies" rightContent={renderButton()} />[m
[31m-        {renderContent()}[m
[31m-      </S.Container>[m
[31m-      {coreModalIsOpen ? <CoreModal close={toggleCoreModal} /> : null}[m
[31m-    </>[m
[32m+[m[32m    <S.Container className={className}>[m
[32m+[m[32m      <Routes>[m
[32m+[m[32m        <Route element={<Layout />}>[m
[32m+[m[32m          {/* TODO: replace these hardcoded paths with those in constants/paths.ts */}[m
[32m+[m[32m          {/* <Route path="/artworks/:id" element={<Home />} /> */}[m
[32m+[m[32m          <Route path="*" element={<Navigate to="/currencies/home" replace />} />[m
[32m+[m[32m          <Route path="/home" element={<Home />} />[m
[32m+[m[32m          <Route path="/learn-more" element={<LearnMore />} />[m
[32m+[m[32m        </Route>[m
[32m+[m[32m      </Routes>[m
[32m+[m[32m    </S.Container>[m
   );[m
 };[m
 [m
